/*
  src/app/globals.css
  ---------------------
  This file contains global styles for the application.
  It utilizes Tailwind CSS for utility-first styling and defines
  custom base styles, component styles, and utility classes.
*/

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Base styles */
/* Defines global CSS variables for theming, primarily colors. */
:root {
  /* --foreground-rgb: Defines the RGB values for the primary text color. */
  --foreground-rgb: 46, 46, 46; /* Charcoal color */
  /* --background-rgb: Defines the RGB values for the primary background color. */
  --background-rgb: 244, 244, 242; /* Off-white color */
}

body {
  /* Applies the defined foreground and background colors to the body. */
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-rgb));
  /* Ensures a smooth scroll behavior across the application. */
  scroll-behavior: smooth;
}

/* Retro button styles */
/*
  .retro-button: A custom button style with a retro aesthetic.
  - Features a 3D-like shadow effect.
  - Uppercase text and transition for color changes.
*/
.retro-button {
  @apply inline-block px-4 py-2 uppercase transition-colors;
  box-shadow: 3px 3px 0px rgba(0, 0, 0, 0.2); /* Creates a slightly offset shadow */
}

/*
  .retro-button:active: Styles for the active (clicked) state of the retro button.
  - Reduces shadow and shifts position slightly to simulate a press.
*/
.retro-button:active {
  box-shadow: 1px 1px 0px rgba(0, 0, 0, 0.2); /* Smaller shadow */
  transform: translate(2px, 2px); /* Simulates the button being pressed down and to the right */
}

/*
  Simple grain effect for surfaces
  .grain-overlay: A utility class to add a subtle grain texture to elements.
  - Uses a pseudo-element ::after to overlay an SVG-based noise texture.
*/
.grain-overlay {
  position: relative; /* Establishes a positioning context for the ::after pseudo-element. */
}

.grain-overlay::after {
  content: ""; /* Required for pseudo-elements to be generated. */
  position: absolute; /* Positions the overlay relative to its parent. */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /*
    SVG background image for generating a noise/grain texture.
    - feTurbulence creates fractal noise.
    - baseFrequency, numOctaves, stitchTiles control the noise appearance.
  */
  background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.65' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)'/%3E%3C/svg%3E");
  opacity: 0.15; /* Controls the intensity of the grain effect. */
  pointer-events: none; /* Ensures the overlay doesn't interfere with mouse interactions. */
  z-index: 10; /* Ensures the grain is above the element's content but can be layered. */
  mix-blend-mode: multiply; /* Blends the grain texture with the element's background. */
}